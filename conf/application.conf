# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = business-matching

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "urYTGRywxwoMroHkS1T:KZJF8Ty26>5Rvo4T]8`dPbtoSTQ8tlW5pGsAYjOYu3tw"

# The application languages
# ~~~~~
application.langs="en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

play.modules.enabled += "module.ServiceBindings"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  controllers.BusinessLookupController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = false
    authParams = {
      confidenceLevel = 50
    }
  }
  controllers.SaBusinessLookupController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = false
    authParams = {
      confidenceLevel = 50
    }
  }
  controllers.AgentBusinessLookupController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = false
    authParams = {
      account = "agent"
      agentRole = "assistant"
      confidenceLevel = 50
    }
  }
}

logger.root = ERROR

logger.play = INFO

logger.application = DEBUG

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

txmonitoring {
  enabled = true
  traceRequests = true
}

auditing {
  enabled = true
  traceRequests = true

  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {

  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    timeout = 5 seconds

    delay-response = 2 seconds

    protocol = http

    auth {
      host = localhost
      port = 8500
    }

    datastream {
      host = localhost
      port = 8100
    }

    etmp-hod {
      host = localhost
      port = 9926
      environment = ""
      authorization-token = ""
    }
  }

}
